<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.quyennv.lms.mappers.UserEnrollCourseMapper">
  <resultMap id="BaseResultMap" type="com.quyennv.lms.entities.UserEnrollCourse">
    <id column="user_id" jdbcType="OTHER" javaType="UUID" typeHandler="com.quyennv.lms.config.typehandlers.UUIDTypeHandler"  property="userId" />
    <id column="course_id" jdbcType="OTHER"  javaType="UUID" typeHandler="com.quyennv.lms.config.typehandlers.UUIDTypeHandler"  property="courseId" />
    <result column="id" jdbcType="OTHER" javaType="UUID" typeHandler="com.quyennv.lms.config.typehandlers.UUIDTypeHandler"  property="id" />
    <result column="price" jdbcType="NUMERIC" property="price" />
    <result column="enroll_status" jdbcType="VARCHAR" property="enrollStatus" />
    <result column="student_id" jdbcType="INTEGER" property="studentId" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="deleted_at" jdbcType="TIMESTAMP" property="deletedAt" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    user_id, course_id, id, price, enroll_status, student_id, updated_at, created_at, 
    deleted_at
  </sql>
  <select id="selectByPrimaryKey" parameterType="com.quyennv.lms.entities.UserEnrollCourseKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from public.user_enroll_course
    where user_id = #{userId,jdbcType=OTHER}
      and course_id = #{courseId,jdbcType=OTHER}
  </select>
  <select id="selectByUserId" parameterType="UUID" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from public.user_enroll_course
    where user_id = #{userId,jdbcType=OTHER}
  </select>
  <select id="selectByCourseId" parameterType="UUID" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from public.user_enroll_course
    where course_id = #{userId,jdbcType=OTHER}
  </select>
  <select id="selectByStudentIds" resultMap="BaseResultMap">
    SELECT *
    FROM user_enroll_course
    WHERE user_id IN
    <foreach item="id" collection="userIds" open="(" separator="," close=")">
      #{id}
    </foreach>
 </select>

  <select id="selectByPrimaryKeyAndStatus" parameterType="map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from public.user_enroll_course
    where user_id = #{key.userId,jdbcType=OTHER}
    and course_id = #{key.courseId,jdbcType=OTHER}
    and enroll_status = #{status,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.quyennv.lms.entities.UserEnrollCourseKey">
    delete from public.user_enroll_course
    where user_id = #{userId,jdbcType=OTHER}
      and course_id = #{courseId,jdbcType=OTHER}
  </delete>
  <insert id="insert" parameterType="com.quyennv.lms.entities.UserEnrollCourse">
    insert into public.user_enroll_course (user_id, course_id, id, 
      price, enroll_status, student_id, 
      updated_at
      )
    values (#{userId,jdbcType=OTHER}, #{courseId,jdbcType=OTHER}, #{id,jdbcType=OTHER},
      #{price,jdbcType=NUMERIC}, #{enrollStatus,jdbcType=VARCHAR}, #{studentId,jdbcType=INTEGER}, 
      #{updatedAt,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertBatch" parameterType="list">
    insert into public.user_enroll_course (user_id, course_id, id,
      price, enroll_status, student_id,
      updated_at
      )
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.userId,jdbcType=OTHER}, #{item.courseId,jdbcType=OTHER}, #{item.id,jdbcType=OTHER},
      #{item.price,jdbcType=NUMERIC}, #{item.enrollStatus,jdbcType=VARCHAR}, #{item.studentId,jdbcType=INTEGER},
      #{item.updatedAt,jdbcType=TIMESTAMP}
      )
    </foreach>
  </insert>
  <insert id="insertSelective" parameterType="com.quyennv.lms.entities.UserEnrollCourse">
    insert into public.user_enroll_course
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="courseId != null">
        course_id,
      </if>
      <if test="id != null">
        id,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="enrollStatus != null">
        enroll_status,
      </if>
      <if test="studentId != null">
        student_id,
      </if>
      <if test="deletedAt != null">
        deleted_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=OTHER},
      </if>
      <if test="courseId != null">
        #{courseId,jdbcType=OTHER},
      </if>
      <if test="id != null">
        #{id,jdbcType=OTHER},
      </if>
      <if test="price != null">
        #{price,jdbcType=NUMERIC},
      </if>
      <if test="enrollStatus != null">
        #{enrollStatus,jdbcType=VARCHAR},
      </if>
      <if test="studentId != null">
        #{studentId,jdbcType=INTEGER},
      </if>
      <if test="deletedAt != null">
        #{deletedAt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.quyennv.lms.entities.UserEnrollCourse">
    update public.user_enroll_course
    <set>
      <if test="id != null">
        id = #{id,jdbcType=OTHER},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=NUMERIC},
      </if>
      <if test="enrollStatus != null">
        enroll_status = #{enrollStatus,jdbcType=VARCHAR},
      </if>
      <if test="studentId != null">
        student_id = #{studentId,jdbcType=INTEGER},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="deletedAt != null">
        deleted_at = #{deletedAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where user_id = #{userId,jdbcType=OTHER}
      and course_id = #{courseId,jdbcType=OTHER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.quyennv.lms.entities.UserEnrollCourse">
    update public.user_enroll_course
    set id = #{id,jdbcType=OTHER},
      price = #{price,jdbcType=NUMERIC},
      enroll_status = #{enrollStatus,jdbcType=VARCHAR},
      student_id = #{studentId,jdbcType=INTEGER},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      deleted_at = #{deletedAt,jdbcType=TIMESTAMP}
    where user_id = #{userId,jdbcType=OTHER}
      and course_id = #{courseId,jdbcType=OTHER}
  </update>
</mapper>