<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.quyennv.lms.mappers.QuestionTextAnswerMapper">
    <resultMap id="BaseResultMap" type="com.quyennv.lms.entities.QuestionTextAnswer">
        <id column="id" jdbcType="OTHER" property="id" javaType="UUID"
            typeHandler="com.quyennv.lms.config.typehandlers.UUIDTypeHandler"/>
        <result column="question_id" jdbcType="OTHER" property="questionId"/>
        <result column="correct_text_answer" jdbcType="VARCHAR" property="correctTextAnswer"/>
        <result column="explanation" jdbcType="VARCHAR" property="explanation"/>
        <result column="deleted_at" jdbcType="TIMESTAMP" property="deletedAt"/>
        <result column="created_at" jdbcType="TIMESTAMP" property="createdAt"/>
        <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt"/>
    </resultMap>
    <sql id="Base_Column_List">
        id
        , question_id, correct_text_answer, explanation, deleted_at, created_at, updated_at
    </sql>
    <select id="selectByPrimaryKey" parameterType="UUID" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from public.question_text_answer
        where id = #{id,jdbcType=OTHER}
    </select>
    <select id="selectByQuestionId" parameterType="UUID" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from public.question_text_answer
        where question_id = #{questionId,jdbcType=OTHER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="UUID">
        delete
        from public.question_text_answer
        where id = #{id,jdbcType=OTHER}
    </delete>
    <insert id="insert" parameterType="com.quyennv.lms.entities.QuestionTextAnswer">
        insert into public.question_text_answer (id, question_id, correct_text_answer,
                                                 explanation, deleted_at, created_at,
                                                 updated_at)
        values (#{id,jdbcType=OTHER}, #{questionId,jdbcType=OTHER}, #{correctTextAnswer,jdbcType=VARCHAR},
                #{explanation,jdbcType=VARCHAR}, #{deletedAt,jdbcType=TIMESTAMP}, #{createdAt,jdbcType=TIMESTAMP},
                #{updatedAt,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertBatch" parameterType="list">
        insert into public.question_text_answer (
        question_id,
        correct_text_answer,
        explanation,
        deleted_at,
        created_at,
        updated_at
        )
        values
        <foreach collection="list" item="item" separator=",">
            (
            #{item.questionId, jdbcType=OTHER},
            #{item.correctTextAnswer, jdbcType=VARCHAR},
            #{item.explanation, jdbcType=VARCHAR},
            #{item.deletedAt, jdbcType=TIMESTAMP},
            #{item.createdAt, jdbcType=TIMESTAMP},
            #{item.updatedAt, jdbcType=TIMESTAMP}
            )
        </foreach>
    </insert>

    <insert id="insertSelective" parameterType="com.quyennv.lms.entities.QuestionTextAnswer">
        insert into public.question_text_answer
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="questionId != null">
                question_id,
            </if>
            <if test="correctTextAnswer != null">
                correct_text_answer,
            </if>
            <if test="explanation != null">
                explanation,
            </if>
            <if test="deletedAt != null">
                deleted_at,
            </if>
            <if test="createdAt != null">
                created_at,
            </if>
            <if test="updatedAt != null">
                updated_at,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=OTHER},
            </if>
            <if test="questionId != null">
                #{questionId,jdbcType=OTHER},
            </if>
            <if test="correctTextAnswer != null">
                #{correctTextAnswer,jdbcType=VARCHAR},
            </if>
            <if test="explanation != null">
                #{explanation,jdbcType=VARCHAR},
            </if>
            <if test="deletedAt != null">
                #{deletedAt,jdbcType=TIMESTAMP},
            </if>
            <if test="createdAt != null">
                #{createdAt,jdbcType=TIMESTAMP},
            </if>
            <if test="updatedAt != null">
                #{updatedAt,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.quyennv.lms.entities.QuestionTextAnswer">
        update public.question_text_answer
        <set>
            <if test="questionId != null">
                question_id = #{questionId,jdbcType=OTHER},
            </if>
            <if test="correctTextAnswer != null">
                correct_text_answer = #{correctTextAnswer,jdbcType=VARCHAR},
            </if>
            <if test="explanation != null">
                explanation = #{explanation,jdbcType=VARCHAR},
            </if>
            <if test="deletedAt != null">
                deleted_at = #{deletedAt,jdbcType=TIMESTAMP},
            </if>
            <if test="createdAt != null">
                created_at = #{createdAt,jdbcType=TIMESTAMP},
            </if>
            <if test="updatedAt != null">
                updated_at = #{updatedAt,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=OTHER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.quyennv.lms.entities.QuestionTextAnswer">
        update public.question_text_answer
        set question_id         = #{questionId,jdbcType=OTHER},
            correct_text_answer = #{correctTextAnswer,jdbcType=VARCHAR},
            explanation         = #{explanation,jdbcType=VARCHAR},
            deleted_at          = #{deletedAt,jdbcType=TIMESTAMP},
            created_at          = #{createdAt,jdbcType=TIMESTAMP},
            updated_at          = #{updatedAt,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=OTHER}
    </update>
</mapper>