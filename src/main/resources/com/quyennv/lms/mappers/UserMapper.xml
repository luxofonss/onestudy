<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.quyennv.lms.mappers.UserMapper">
  <resultMap id="BaseResultMap" type="com.quyennv.lms.entities.User">
    <id column="id" jdbcType="OTHER" javaType="UUID" typeHandler="com.quyennv.lms.config.typehandlers.UUIDTypeHandler"  property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="is_verified" jdbcType="BIT" property="isVerified" />
    <result column="phone_number" jdbcType="VARCHAR" property="phoneNumber" />
    <result column="first_name" jdbcType="VARCHAR" property="firstName" />
    <result column="last_name" jdbcType="VARCHAR" property="lastName" />
    <result column="date_of_birth" jdbcType="TIMESTAMP" property="dateOfBirth" />
    <result column="gender" jdbcType="VARCHAR" property="gender" />
    <result column="role" jdbcType="VARCHAR" property="role" />
    <result column="avatar" jdbcType="VARCHAR" property="avatar" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="deleted_at" jdbcType="TIMESTAMP" property="deletedAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, username, email, is_verified, phone_number, first_name, last_name, date_of_birth, 
    gender, role, avatar, address, deleted_at, updated_at, created_at
  </sql>
  <select id="selectByPrimaryKey" parameterType="UUID" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from public.user
    where id = #{id,jdbcType=OTHER}
    limit 1
  </select>
  <select id="selectByUsername" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from public.user
    where username = #{username,jdbcType=VARCHAR}
    limit 1
  </select>
  <select id="selectByUserIdList" parameterType="list" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from public.user
    where id in
    <foreach collection="list" item="id" open="(" close=")" separator=",">
      #{id}
    </foreach>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="UUID">
    delete from public.user
    where id = #{id,jdbcType=OTHER}
  </delete>
  <insert id="insert" parameterType="com.quyennv.lms.entities.User">
    insert into public.user (id, username, email, 
      is_verified, phone_number, first_name, 
      last_name, date_of_birth, gender, 
      role, avatar, address, 
      deleted_at
      )
    values (#{id,jdbcType=OTHER}, #{username,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{isVerified,jdbcType=BIT}, #{phoneNumber,jdbcType=VARCHAR}, #{firstName,jdbcType=VARCHAR}, 
      #{lastName,jdbcType=VARCHAR}, #{dateOfBirth,jdbcType=TIMESTAMP}, #{gender,jdbcType=VARCHAR}, 
      #{role,jdbcType=VARCHAR}, #{avatar,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{deletedAt,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.quyennv.lms.entities.User">
    insert into public.user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="isVerified != null">
        is_verified,
      </if>
      <if test="phoneNumber != null">
        phone_number,
      </if>
      <if test="firstName != null">
        first_name,
      </if>
      <if test="lastName != null">
        last_name,
      </if>
      <if test="dateOfBirth != null">
        date_of_birth,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="role != null">
        role,
      </if>
      <if test="avatar != null">
        avatar,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="deletedAt != null">
        deleted_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=OTHER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="isVerified != null">
        #{isVerified,jdbcType=BIT},
      </if>
      <if test="phoneNumber != null">
        #{phoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="firstName != null">
        #{firstName,jdbcType=VARCHAR},
      </if>
      <if test="lastName != null">
        #{lastName,jdbcType=VARCHAR},
      </if>
      <if test="dateOfBirth != null">
        #{dateOfBirth,jdbcType=TIMESTAMP},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=VARCHAR},
      </if>
      <if test="role != null">
        #{role,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="deletedAt != null">
        #{deletedAt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.quyennv.lms.entities.User">
    update public.user
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="isVerified != null">
        is_verified = #{isVerified,jdbcType=BIT},
      </if>
      <if test="phoneNumber != null">
        phone_number = #{phoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="firstName != null">
        first_name = #{firstName,jdbcType=VARCHAR},
      </if>
      <if test="lastName != null">
        last_name = #{lastName,jdbcType=VARCHAR},
      </if>
      <if test="dateOfBirth != null">
        date_of_birth = #{dateOfBirth,jdbcType=TIMESTAMP},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=VARCHAR},
      </if>
      <if test="role != null">
        role = #{role,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        avatar = #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="deletedAt != null">
        deleted_at = #{deletedAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=OTHER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.quyennv.lms.entities.User">
    update public.user
    set username = #{username,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      is_verified = #{isVerified,jdbcType=BIT},
      phone_number = #{phoneNumber,jdbcType=VARCHAR},
      first_name = #{firstName,jdbcType=VARCHAR},
      last_name = #{lastName,jdbcType=VARCHAR},
      date_of_birth = #{dateOfBirth,jdbcType=TIMESTAMP},
      gender = #{gender,jdbcType=VARCHAR},
      role = #{role,jdbcType=VARCHAR},
      avatar = #{avatar,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      deleted_at = #{deletedAt,jdbcType=TIMESTAMP},
    where id = #{id,jdbcType=OTHER}
  </update>
</mapper>